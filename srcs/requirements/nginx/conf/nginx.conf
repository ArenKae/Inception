server {

    # Listen for incoming connections on port 443 using SSL.
    listen 443 ssl;
    listen [::]:443 ssl;

    # Specifies the domain name or hostname of this server block
    server_name inception;

    # Specifies the path of the SSL certificate file.
    ssl_certificate /etc/nginx/ssl/ssl_certificat.pem;
    ssl_certificate_key /etc/nginx/ssl/ssl_key.key;

    # Specifies which SSL/TLS versions are allowed for secure connections.
    ssl_protocols TLSv1.2 TLSv1.3;

    # Sets the root directory where Nginx will look for files to serve.
    root /var/www/html;

    # Specifies the default files Nginx will serve when a directory is requested.
    index index.php index.html index.htm;

    # This block defines how Nginx should handle requests to a specific path.
    location / {
        # Enables directory listing: if there is no index file in a dir, Nginx will show a list of files and folders in that dir.
        autoindex on;
        # Controls how Nginx looks for files: try to find a file or a dir that matches the requested URI (Uniform Resource Identifier, same as U.R.Locator but more generic)
		# If nothing is found, redirects to index.php with the original query string ($args) appended.
        try_files $uri $uri/ /index.php?$args;
    }

    # PHP handling block.
    # This configuration tells Nginx how to handle requests for .php files:
    # 1. Nginx forwards the request to the "wordpress" server using the FastCGI protocol on port 9000.
    # 2. The "php-fpm" service running in the container executes the PHP code in the requested file.
    # 3. The output is returned to Nginx, which sends it back to the client.
    location ~ \.php$ {
        include fastcgi_params;               # Load default FastCGI parameters
        fastcgi_pass wordpress:9000;          # Pass PHP requests to the PHP-FPM service
        fastcgi_index index.php;              # Default PHP file
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; # Pass the full path to the PHP script.
    }

    # Deny access to .htaccess files for security
	# These files are typically used for server configuration and should never be opened to the public.
    location ~ /\.ht {
        deny all;
    }
}
